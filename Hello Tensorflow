{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30775,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport tensorflow as tf\n\nprint(\"Loading data\")\ndata = np.loadtxt('./data/mnist.csv', delimiter=',')\nprint('MNIST dataset is loaded')\n\nx_train = data[:, 1:]\ny_train = data[:, 0]\nx_train = x_train/255\n\nmodel = tf.keras.models.sequential([\n    tf.keras.layers.Dense(16, activation='relu'),\n    tf.keras.layers.Dense(10, activation='softmax')\n])\n\nmodel.compile(optimizer='adam',\n             loss='sparse_categorical_crossentropy',\n             metrics=['accuracy'])\n\nprint(\"Training model\")\nmodel.fit(x_train, y_train, epochs=2, batch_size=12)\n\nprint(\"Model Trained Succesfully\")","metadata":{},"execution_count":null,"outputs":[]}]}